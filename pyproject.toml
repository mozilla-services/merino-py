[tool.coverage.run]
source = ["src"]
branch = true
relative_files = true

[tool.coverage.report]
show_missing = true

[tool.isort]
profile = "black"
skip_gitignore = true

[tool.bandit]
# skips asserts
# B101: https://bandit.readthedocs.io/en/latest/plugins/b101_assert_used.html#
# B104: https://bandit.readthedocs.io/en/latest/plugins/b104_hardcoded_bind_all_interfaces.html
skips = ["B101", "B104"]

[tool.mypy]
python_version = "3.11"
disallow_untyped_calls = true
follow_imports = "normal"
ignore_missing_imports = true
pretty = true
show_error_codes = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
warn_unreachable = true

[tool.pydocstyle]
match = ".*\\.py"
convention = "pep257"
# Error Code Ref: https://www.pydocstyle.org/en/stable/error_codes.html
# D212 Multi-line docstring summary should start at the first line
add-select = ["D212"]
# D105 Docstrings for magic methods
# D107 Docstrings for __init__
# D203 as it conflicts with D211 https://github.com/PyCQA/pydocstyle/issues/141
# D205 1 blank line required between summary line and description, awkward spacing
# D400 First line should end with a period, doesn't work when sentence spans 2 lines
add-ignore = ["D105","D107","D203", "D205", "D400"]

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-v -r s"

[tool.poetry]
name = "merino-py"
version = "0.1.0"
description = "Service for Firefox Suggest at Mozilla"
authors = ["Mozilla"]
license = "Mozilla Public License Version 2.0"
packages = [
  { include = "merino" }
]

[tool.poetry.scripts]
merino-jobs = "merino.jobs.cli:cli"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.79.0"
uvicorn = {extras = ["standard"], version = "^0.18.2"}
dockerflow = "^2022.7.0"
asgi-correlation-id = "^3.0.1"
dynaconf = "^3.1.11"
httpx = "^0.23.0"
sentry-sdk = {extras = ["fastapi"], version = "^1.9.5"}
kinto-http = "^11.0.0"
aiodogstatsd = "^0.16.0"
ua-parser = "^0.16.1"
geoip2 = "^4.6.0"
rich = "^12.5.1"
wrapt = "^1.14.1"
elasticsearch = {extras = ["async"], version = "^8.5.0"}
google-cloud-storage = "^2.6.0"
typer = "^0.7.0"
redis = "^4.5.3"

[tool.poetry.dev-dependencies]
black = "^22.6.0"
flake8 = "^4.0.1"
isort = "^5.10.1"
pydocstyle = "^6.1.1"
mypy = "^0.971"
pre-commit = "^2.20.0"
bandit = {extras = ["toml"], version = "^1.7.4"}
types-PyYAML = "^6.0.11"
types-requests = "^2.28.10"
types-geoip2 = "^3.0.0"
scalene = "^1.5.13"
pytest = "^7.2.0"
pytest-asyncio = "^0.20.3"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
freezegun = "^1.2.2"
requests-mock = "^1.10.0"
types-redis = "^4.5.1.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
