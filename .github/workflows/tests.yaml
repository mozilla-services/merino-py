name: tests

on:
  workflow_call:
    inputs:
      test_result_dir:
        description: "Directory where test results should be output"
        required: false
        type: string
        default: workspace/test-results

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up to run
        uses: ./.github/actions/weave
      - name: Run unit tests
        run: make unit-tests
        env:
          GITHUB_REPONAME: ${{ github.event.repository.name }}
          TEST_RESULTS_DIR: ${{ inputs.test_result_dir }}
      - name: Generate Test Coverage
        run: make coverage-unit
        env:
          GITHUB_REPONAME: ${{ github.event.repository.name }}
          TEST_RESULTS_DIR: ${{ inputs.test_result_dir }}
      - uses: actions/upload-artifact@v4
        if: always()  # Ensure the artifacts upload even if tests fail
        with:
          name: unit-test-results
          include-hidden-files: true
          path: ${{ inputs.test_result_dir }}
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up to run
        uses: ./.github/actions/weave
      - name: Run Integration Tests
        run: make integration-tests
        env:
          GITHUB_REPONAME: ${{ github.event.repository.name }}
          TEST_RESULTS_DIR: ${{ inputs.test_result_dir }}
      - name: Generate Test Coverage
        run: make coverage-integration
        env:
          GITHUB_REPONAME: ${{ github.event.repository.name }}
          TEST_RESULTS_DIR: ${{ inputs.test_result_dir }}
      - uses: actions/upload-artifact@v4
        if: always()  # Ensure the artifacts upload even if tests fail
        with:
          name: integration-test-results
          include-hidden-files: true
          path: ${{ inputs.test_result_dir }}
  test-coverage-checks:
    needs: [unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up to run
        uses: ./.github/actions/weave
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ inputs.test_result_dir }}
          merge-multiple: true
      - name: Evaluate Minimum Test Coverage
        run: make test-coverage-check
        env:
          TEST_RESULTS_DIR: ${{ inputs.test_result_dir }}
