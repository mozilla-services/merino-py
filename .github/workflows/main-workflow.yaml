name: main-workflow # The ETE Pipeline integration depends on this name

on:
  push:
    branches:
      - main

jobs:
  run-checks:
    uses: ./.github/workflows/checks.yaml
  run-tests:
    uses: ./.github/workflows/tests.yaml
  upload-test-artifacts:
    needs: run-tests
    if: always() # Ensure the job runs even if previous jobs, like test runs, fail
    uses: ./.github/workflows/upload-test-artifacts-to-gcs.yaml
    with:
      destination: "gs://ecosystem-test-eng-metrics/merino-py/junit"
      extension: "xml"
  upload-coverage-artifacts:
    needs: run-tests
    if: always() # Ensure the job runs even if previous jobs, like test runs, fail
    uses: ./.github/workflows/upload-test-artifacts-to-gcs.yaml
    with:
      destination: "gs://ecosystem-test-eng-metrics/merino-py/coverage"
      extension: "json"
  run-docs-build:
    uses: ./.github/workflows/docs-build.yaml
  run-docs-publish-github-pages:
    needs: run-docs-build
    uses: ./.github/workflows/docs-publish-github-pages.yaml
  run-docker-image-build-and-push:
    environment: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Get info
        run: |
          uname -v
          docker info
      - name: Create version.json
        run: |
          printf '{"commit":"%s","version":"%s","source":"%s","build":"%s"}\n' \
          "$GITHUB_SHA" \
          "$GITHUB_REF_NAME" \
          "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY" \
          "$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" > version.json
      - name: Output version.json
        run: cat version.json
      - name: Build docker image
        run: make docker-build
      - name: Tag image for GAR
        run: |
          docker tag app:build ${{ secrets.DOCKER_IMAGE_PATH }}:latest
          docker tag app:build ${{ secrets.DOCKER_IMAGE_PATH }}:sha-${GITHUB_SHA}
      - name: Push the docker image to GAR
        uses: mozilla-it/deploy-actions/docker-push@v3.11.1
        with:
          local_image: app:build
          image_repo_path: ${{ secrets.DOCKER_IMAGE_PATH }}
          image_tags: |
            ${{ secrets.DOCKER_IMAGE_PATH }}:latest
            ${{ secrets.DOCKER_IMAGE_PATH }}:sha-${{ github.sha }}
          workload_identity_pool_project_number: ${{ vars.GCPV2_WORKLOAD_IDENTITY_POOL_PROJECT_NUMBER }}
          project_id: ${{ vars.GCP_PROJECT_ID }}
          service_account_name: artifact-writer@moz-fx-merino-prod-5de4.iam.gserviceaccount.com
